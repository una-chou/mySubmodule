# Default values for your projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
canary:
  enabled: false
  annotations:
    notifications.argoproj.io/subscribe.on-rollout-completed.lark: ""
    notifications.argoproj.io/subscribe.on-rollout-paused.lark: ""
  steps:
  - setCanaryScale:
      replicas: 1
  - pause: {}
fullnameOverride: ""

replicaCount: 1
image:
  repository: draft
  tag: dev
  pullPolicy: IfNotPresent
  tagSuffix: prod
# 在集合命名空间使用默认service name
nginx: {}
#   gzip: true
#   sagaurl: http://saga.gsmaprod:8081
#   ossuploadurl: http://ossupload.gsmaprod:8084
#   apiserverurl: http://api-server.gsmaprod:3030
#   datalayerurl: http://gotin-data-layer.gsmaprod:50000
#   essearchurl: http://essearch.gsmaprod:80

# optional list of image pull secrets to use to pull image
jx:
  imagePullSecrets:
  - tekton-container-registry-auth
  - gotin-harbor-registry

# define environment variables here as a map of key: value
env:

# enable this flag to use knative serve to deploy the app
knativeDeploy: false

# HorizontalPodAutoscaler
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 6
  cpuTargetAverageUtilization: 80
  memoryTargetAverageUtilization: 80

# Canary deployments
# If enabled, Istio and Flagger need to be installed in the cluste

service:
  name: gotin-mobile-nanjing
  type: ClusterIP
  externalPort: 80
  internalPort: 80
  annotations: {}
resources:
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
probePath: /
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  # Optional distinct liveness probe path, if empty the probePath is used
  probePath: ""
readinessProbe:
  failureThreshold: 1
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  # Optional distinct readiness probe path, if empty the probePath is used
  probePath: ""

# custom ingress annotations on this service
ingress:
  class: nginx
  annotations: 
    http-redirect-code: "301"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 800M
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3000"

serviceAccount:
  enabled: true
  name: ""
  annotations: {}
#    iam.gke.io/gcp-service-account: my-sa-in-gke
  labels: {}
#    my-custom-label: value

# values we use from the `jx-requirements.yml` file if we are using helmfile and helm 3
jxRequirements:
  ingress:
    apiVersion: "networking.k8s.io/v1"

    domain: ""
    namespaceSubDomain: -jx.
    domainPrefix: "njyh"
    serviceType: ""
    tls:
      email: ""
      enabled: false
      production: false
      secretName: ""

redirectEnabled: false

# azure 静态网站部署
swa:
  enabled: false
  annotations:
    argocd.argoproj.io/sync-options: PruneLast=true
    helm.sh/hook: post-install

